@using System.Web.Http
@using System.Web.Http.Controllers
@using System.Web.Http.Description
@using System.Collections.ObjectModel
@using Hydocs.Areas.HelpPage.Models
@model Collection<ApiDescription>

@{

   // Html.ActionLink("API", "Index", "Help", new { area = "" }, null); Addad & commented out by TKJ
    ViewBag.Title = "Adworks Web API Help Page";

    // Group APIs by controller
    ILookup<HttpControllerDescriptor, ApiDescription> apiGroups = Model.ToLookup(api => api.ActionDescriptor.ControllerDescriptor);
}

<link type="text/css" href="~/Areas/HelpPage/HelpPage.css" rel="stylesheet" />
<header class="help-page">
    <div class="content-wrapper">
        <div class="float-left">
            <h1>@ViewBag.Title</h1>
        </div>
    </div>
</header>
<div id="body" class="help-page">
    <section class="featured">
        <div class="content-wrapper">
            <h2>Introduction</h2>
            <p>
                An API is a web service that conforms to the architectural principles of Representational State Transfer (REST). <br />Each API is called by issuing a standard HTTP request methods: POST, GET, PUT, or DELETE (more commonly known as the CRUD operations: Create, Read, Update, and Delete).
                <br /> The list of entries (or the details of a specific entry) is retrieved using a GET request. The API client creates new entries by issuing POST requests. The client issues PUT requests to modify an entry object. When an entry object is no longer needed, the client issues a DELETE request to remove the entry. 
            </p>
            <p>
               Below is a sample Adventure Works API documentation demo. 
            </p>
        </div>
    </section>
    <section class="content-wrapper main-content clear-fix">
        @foreach (var group in apiGroups)
        {
            @Html.DisplayFor(m => group, "ApiGroup")
        }
    </section>
</div>
